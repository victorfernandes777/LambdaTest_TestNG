<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="12" passed="6" failed="0" skipped="6">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-04T08:55:44Z" name="Assignment" finished-at="2022-09-04T08:58:53Z" duration-ms="189687">
    <groups>
    </groups>
    <test started-at="2022-09-04T08:55:44Z" name="Chrome test" finished-at="2022-09-04T08:56:08Z" duration-ms="24517">
      <class name="myPackage.myClass">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:44Z" name="setUp" finished-at="2022-09-04T14:25:52Z" duration-ms="8701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:52Z" name="URLLaunch" finished-at="2022-09-04T14:25:54Z" duration-ms="1282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio1()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:54Z" name="Scenerio1" finished-at="2022-09-04T14:25:56Z" duration-ms="2045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:56Z" name="tearDown" finished-at="2022-09-04T14:25:57Z" duration-ms="1442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:57Z" name="URLLaunch" finished-at="2022-09-04T14:25:58Z" duration-ms="634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio2()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:25:58Z" name="Scenerio2" finished-at="2022-09-04T14:26:01Z" duration-ms="3353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:26:01Z" name="tearDown" finished-at="2022-09-04T14:26:03Z" duration-ms="1456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:26:03Z" name="URLLaunch" finished-at="2022-09-04T14:26:03Z" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio3()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:26:03Z" name="Scenerio3" finished-at="2022-09-04T14:26:07Z" duration-ms="3656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@2bd08376]" started-at="2022-09-04T14:26:07Z" name="tearDown" finished-at="2022-09-04T14:26:08Z" duration-ms="1365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- myPackage.myClass -->
    </test> <!-- Chrome test -->
    <test started-at="2022-09-04T08:56:08Z" name="MicrosoftEdge Test" finished-at="2022-09-04T08:56:39Z" duration-ms="30372">
      <class name="myPackage.myClass">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:08Z" name="setUp" finished-at="2022-09-04T14:26:14Z" duration-ms="5958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:14Z" name="URLLaunch" finished-at="2022-09-04T14:26:18Z" duration-ms="3751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio1()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:18Z" name="Scenerio1" finished-at="2022-09-04T14:26:20Z" duration-ms="2379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:20Z" name="tearDown" finished-at="2022-09-04T14:26:22Z" duration-ms="1521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:22Z" name="URLLaunch" finished-at="2022-09-04T14:26:23Z" duration-ms="819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio2()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:23Z" name="Scenerio2" finished-at="2022-09-04T14:26:27Z" duration-ms="4860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:27Z" name="tearDown" finished-at="2022-09-04T14:26:29Z" duration-ms="1905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:29Z" name="URLLaunch" finished-at="2022-09-04T14:26:31Z" duration-ms="1341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio3()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:31Z" name="Scenerio3" finished-at="2022-09-04T14:26:37Z" duration-ms="6489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@72437d8d]" started-at="2022-09-04T14:26:37Z" name="tearDown" finished-at="2022-09-04T14:26:39Z" duration-ms="1343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- myPackage.myClass -->
    </test> <!-- MicrosoftEdge Test -->
    <test started-at="2022-09-04T08:56:39Z" name="Firefox Test" finished-at="2022-09-04T08:58:26Z" duration-ms="107048">
      <class name="myPackage.myClass">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:26:39Z" name="setUp" finished-at="2022-09-04T14:28:25Z" duration-ms="106524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:25Z" name="URLLaunch" finished-at="2022-09-04T14:28:25Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Unable to find the session info for particular sessionId url, maybe session has quit already or timed out. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 513 milliseconds
Build info: version: '2.41.0', revision: '3192d8a6c4449dc285928ba024779344f5423c58', time: '2014-03-27 11:29:39'
System info: host: 'Vivian', ip: '192.168.0.103', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={moz:profile=C:\Users\ltuser\AppData\Local\Temp\rust_mozprofilelQ5O5H, rotatable=false, moz:geckodriverVersion=0.26.0, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, moz:headless=false, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, webdriver.remote.sessionid=d7ab8f30-9a3d-4fdf-a3b3-ce2fb69fa1dd, acceptInsecureCerts=true, browserVersion=82.0, moz:shutdownTimeout=60000, platformVersion=6.1, moz:processID=3288, browserName=firefox, moz:buildID=20201014125134, platformName=windows, setWindowRect=true, moz:webdriverClick=true}, sessionId=d7ab8f30-9a3d-4fdf-a3b3-ce2fb69fa1dd, platform=ANY}]
Session ID: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Unable to find the session info for particular sessionId url, maybe session has quit already or timed out. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 513 milliseconds
Build info: version: '2.41.0', revision: '3192d8a6c4449dc285928ba024779344f5423c58', time: '2014-03-27 11:29:39'
System info: host: 'Vivian', ip: '192.168.0.103', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={moz:profile=C:\Users\ltuser\AppData\Local\Temp\rust_mozprofilelQ5O5H, rotatable=false, moz:geckodriverVersion=0.26.0, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, moz:headless=false, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, webdriver.remote.sessionid=d7ab8f30-9a3d-4fdf-a3b3-ce2fb69fa1dd, acceptInsecureCerts=true, browserVersion=82.0, moz:shutdownTimeout=60000, platformVersion=6.1, moz:processID=3288, browserName=firefox, moz:buildID=20201014125134, platformName=windows, setWindowRect=true, moz:webdriverClick=true}, sessionId=d7ab8f30-9a3d-4fdf-a3b3-ce2fb69fa1dd, platform=ANY}]
Session ID: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:193)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
	at myPackage.myClass.URLLaunch(myClass.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:552)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:636)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio1()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="Scenerio1" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio1 -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="URLLaunch" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="tearDown" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Scenerio2()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="Scenerio2" finished-at="2022-09-04T14:28:26Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="tearDown" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="Scenerio3()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="Scenerio3" finished-at="2022-09-04T14:28:26Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio3 -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="URLLaunch" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@73194df]" started-at="2022-09-04T14:28:26Z" name="tearDown" finished-at="2022-09-04T14:28:26Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- myPackage.myClass -->
    </test> <!-- Firefox Test -->
    <test started-at="2022-09-04T08:58:26Z" name="Internet Explorer Test" finished-at="2022-09-04T08:58:53Z" duration-ms="27694">
      <class name="myPackage.myClass">
        <test-method is-config="true" signature="setUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:26Z" name="setUp" finished-at="2022-09-04T14:28:51Z" duration-ms="25904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:51Z" name="URLLaunch" finished-at="2022-09-04T14:28:51Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.lambdatest.com/selenium-playground/]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Unable to find the session info for particular sessionId url, maybe session has quit already or timed out. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.78 seconds
Build info: version: '2.41.0', revision: '3192d8a6c4449dc285928ba024779344f5423c58', time: '2014-03-27 11:29:39'
System info: host: 'Vivian', ip: '192.168.0.103', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={proxy={}, webdriver.remote.sessionid=36afabf9-fd98-42c4-94ab-161c694f532f, acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=false, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:21913/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, platformName=windows, setWindowRect=true}, sessionId=36afabf9-fd98-42c4-94ab-161c694f532f, platform=ANY}]
Session ID: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Unable to find the session info for particular sessionId url, maybe session has quit already or timed out. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.78 seconds
Build info: version: '2.41.0', revision: '3192d8a6c4449dc285928ba024779344f5423c58', time: '2014-03-27 11:29:39'
System info: host: 'Vivian', ip: '192.168.0.103', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={proxy={}, webdriver.remote.sessionid=36afabf9-fd98-42c4-94ab-161c694f532f, acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=false, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:21913/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, strictFileInteractability=false, platformName=windows, setWindowRect=true}, sessionId=36afabf9-fd98-42c4-94ab-161c694f532f, platform=ANY}]
Session ID: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:193)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
	at myPackage.myClass.URLLaunch(myClass.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:552)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:636)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio1()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="Scenerio1" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="tearDown" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="URLLaunch" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio2()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="Scenerio2" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="tearDown" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="URLLaunch(java.lang.String)[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="URLLaunch" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLLaunch -->
        <test-method signature="Scenerio3()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="Scenerio3" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenerio3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="tearDown" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:myPackage.myClass@19b93fa8]" started-at="2022-09-04T14:28:53Z" name="cleanUp" finished-at="2022-09-04T14:28:53Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- myPackage.myClass -->
    </test> <!-- Internet Explorer Test -->
  </suite> <!-- Assignment -->
</testng-results>
